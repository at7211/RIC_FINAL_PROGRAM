{"ast":null,"code":"import _classCallCheck from \"/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/src/views/LandingPage/Sections/ProductSection.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // @material-ui/icons\n\nimport Chat from \"@material-ui/icons/Chat\";\nimport VerifiedUser from \"@material-ui/icons/VerifiedUser\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport InfoArea from \"components/InfoArea/InfoArea.jsx\";\nimport productStyle from \"assets/jss/material-kit-react/views/landingPageSections/productStyle.jsx\";\n\nvar ProductSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductSection, _React$Component);\n\n  function ProductSection() {\n    _classCallCheck(this, ProductSection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductSection).apply(this, arguments));\n  }\n\n  _createClass(ProductSection, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.section,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Let\", \"'\", \"s talk product\"), React.createElement(\"h5\", {\n        className: classes.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"This is the paragraph where you can write more details about your product. Keep you user engaged by providing meaningful information. Remember that by this time, the user is curious, otherwise he wouldn\", \"'\", \"t scroll to get here. Add a button if you want the user to see more.\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(InfoArea, {\n        title: \"Free Chat\",\n        description: \"Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing a feature will be enough.\",\n        icon: Chat,\n        iconColor: \"info\",\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(InfoArea, {\n        title: \"Verified Users\",\n        description: \"Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing a feature will be enough.\",\n        icon: VerifiedUser,\n        iconColor: \"success\",\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(InfoArea, {\n        title: \"Fingerprint\",\n        description: \"Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing a feature will be enough.\",\n        icon: Fingerprint,\n        iconColor: \"danger\",\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ProductSection;\n}(React.Component);\n\nProductSection.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(productStyle)(ProductSection);","map":{"version":3,"sources":["/Users/yylslolz/Desktop/RIC_FINAL_PROGRAM/src/views/LandingPage/Sections/ProductSection.jsx"],"names":["React","PropTypes","withStyles","Chat","VerifiedUser","Fingerprint","GridContainer","GridItem","InfoArea","productStyle","ProductSection","classes","props","section","title","description","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// @material-ui/icons\nimport Chat from \"@material-ui/icons/Chat\";\nimport VerifiedUser from \"@material-ui/icons/VerifiedUser\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport InfoArea from \"components/InfoArea/InfoArea.jsx\";\n\nimport productStyle from \"assets/jss/material-kit-react/views/landingPageSections/productStyle.jsx\";\n\nclass ProductSection extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.section}>\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={8}>\n            <h2 className={classes.title}>Let{\"'\"}s talk product</h2>\n            <h5 className={classes.description}>\n              This is the paragraph where you can write more details about your\n              product. Keep you user engaged by providing meaningful\n              information. Remember that by this time, the user is curious,\n              otherwise he wouldn{\"'\"}t scroll to get here. Add a button if you\n              want the user to see more.\n            </h5>\n          </GridItem>\n        </GridContainer>\n        <div>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={4}>\n              <InfoArea\n                title=\"Free Chat\"\n                description=\"Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing a feature will be enough.\"\n                icon={Chat}\n                iconColor=\"info\"\n                vertical\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={4}>\n              <InfoArea\n                title=\"Verified Users\"\n                description=\"Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing a feature will be enough.\"\n                icon={VerifiedUser}\n                iconColor=\"success\"\n                vertical\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={4}>\n              <InfoArea\n                title=\"Fingerprint\"\n                description=\"Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing a feature will be enough.\"\n                icon={Fingerprint}\n                iconColor=\"danger\"\n                vertical\n              />\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductSection.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default withStyles(productStyle)(ProductSection);\n"]},"metadata":{},"sourceType":"module"}